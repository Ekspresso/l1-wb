package main

// –°—Ç—Ä–æ–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞: 1234üòÇ‚åòüëç
// –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
import (
	"fmt"
	"os"
	//"unicode/utf8"
)

// –°–ø–æ—Å–æ–± 1. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å –∑–∞–ø—É—Å–∫–æ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–∏ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç.
func main() {
	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
	if len(os.Args) != 2 {
		fmt.Println("Error: Enter only 1 string")
		return
	}
	str := os.Args[1]
	rev := ""
	tempRev := ""
	// –¶–∏–∫–ª for range –ø–æ —Å—Ä–µ–∑—É (string —è–≤–ª—è–µ—Ç—Å—è —Å—Ä–µ–∑–æ–º –±–∞–π—Ç) –≤–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ –ø–æ—Ä—è–¥–∫—É.
	// –¢–∞–∫–æ–π —Ü–∏–∫–ª, –ø—Ä–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ –∫ —Å—Ç—Ä–æ–∫–∞–º, —á–∏—Ç–∞–µ—Ç –Ω–µ –±–∞–π—Ç—ã –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏,
	// –∞ —Ä—É–Ω—ã (–∫–æ–¥–æ–≤—ã–µ —Ç–æ—á–∫–∏), –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ—Å—Ç–æ—è—Ç—å –∏ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –±–∞–π—Ç.
	// –û–±—ã—á–Ω—ã–π —Ü–∏–∫–ª —Å –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–µ–π —à—ë–ª –±—ã —Ç–æ–ª—å–∫–æ –ø–æ–±–∞–π—Ç–æ–≤–æ, —á—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –±—ã –∫ –ø–æ—Ç–µ—Ä–µ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤ —Å—Ç—Ä–æ–∫–∏.
	for _, valRun := range str {
		rev = string(valRun)
		rev += tempRev
		tempRev = rev
	}
	fmt.Println(rev)
}

// –°–ø–æ—Å–æ–± 2. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ utf8.
// –§—É–Ω–∫—Ü–∏—è utf8.DecodeRuneInString() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, –∑–∞—Ç–µ–º –ø–æ–±–∞–π—Ç–æ–≤–æ —Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–≤—É—é —Ä—É–Ω—É
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 2 –∑–Ω–∞—á–µ–Ω–∏—è: –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—É—é –∫–æ–¥–æ–≤—É—é —Ç–æ—á–∫—É –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—á–∏—Ç–∞–Ω—ã—Ö –±–∞–π—Ç.
// –ó–∞—Ç–µ–º –≤ —Ü–∏–∫–ª–µ –∏–Ω–¥–µ–∫—Å i —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –±–∞–π—Ç,
// —á—Ç–æ–±—ã –∑–∞—Ç–µ–º –Ω–∞—á–∞—Ç—å —Å—á–∏—Ç—ã–≤–∞—Ç—å —Å —ç—Ç–æ–≥–æ –º–µ—Å—Ç–∞.
// –î–∞–ª–µ–µ –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–∞–∫ –≤ —Å–ø–æ—Å–æ–±–µ 1.
// func main() {
// 	if len(os.Args) != 2 {
// 		fmt.Println("Error: Enter only 1 string")
// 		return
// 	}
// 	str := os.Args[1]
// 	rev, tempRev := "", ""
// 	for i, w := 0, 0; i < len(str); i += w {
// 		valRun, width := utf8.DecodeRuneInString(str[i:])
// 		w = width
// 		rev = string(valRun)
// 		rev += tempRev
// 		tempRev = rev
// 	}
// 	fmt.Println(rev)
// }
